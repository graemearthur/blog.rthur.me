[{"categories":["Work","VSCODE"],"contents":"Using the Journal Extension in VS Code to Keep a Worklog Keeping track of what you do every day might sound like extra work, but trust me, it can make a huge difference. Whether you\u0026rsquo;re a developer, freelancer, or sysadmin (like me!), having a worklog helps you stay organized, track progress, and troubleshoot issues faster. In this post, I\u0026rsquo;ll show you how I use the Journal extension in VS Code to keep my worklog simple and effective.\nWhat is a worklog? 💼 A worklog is basically a running record of what you’ve done throughout the day—tasks, problems, solutions, and anything else worth noting. It’s great for tracking progress, remembering fixes, and keeping yourself accountable. In system administration, software development, and project management, worklogs help with transparency and efficiency. I also use mine to store handy commands so I don’t have to Google the same stuff over and over again.\nWhat tools do I use? 🧑‍🍳🤌 Here’s my setup:\nVS Code – My daily driver for pretty much everything. Journal Extension – A lightweight tool for keeping daily logs inside VS Code. Markdown – Easy to format and read, plus it works well with GitHub. GitHub or Local Storage – To keep my logs organized and accessible. Command Logs – I save useful shell commands, scripts, and troubleshooting steps so I can reference them later. Setting it up 🖥️ Install the Journal extension: Open VS Code, hit (Ctrl + Shift + X), search for Journal, and install it. Create a worklog folder: Keeps everything tidy. Tweak the settings: Open Journal’s settings (Ctrl + , \u0026gt; Extensions \u0026gt; Journal) and adjust it to your liking—file format (Markdown, JSON, or plain text) and save location. How I use it 📝 ⏱️ Logging Daily Tasks Every morning, I open my worklog and list out what I need to do. As I go through my day, I check off completed tasks, jot down any roadblocks, and note useful fixes.\nExample:\n## April 3, 2025 ### Tasks: - [x] Restart Apache service 🔄 - [x] Check disk space on servers 🖥️ - [ ] Review system backups and test restore 🗂️ ### Notes: - Had to troubleshoot Apache restart due to port conflict. - Found one server running low on disk space and cleared logs. 📜 Tracking Issues and Fixes Whenever I run into a problem, I document it, along with how I fixed it. This way, if the issue pops up again, I don’t have to start from scratch.\nExample:\n### Issue: Slow Database Queries ⚠️ - Optimized SQL queries by adding proper indexing. - Reduced query execution time from **4s** to **800ms**. 🖥️ Storing Useful Commands As a sysadmin, I’m constantly using different shell commands. Instead of digging through old notes or Googling the same things repeatedly, I save them in my worklog.\nExample:\n### Server Maintenance Commands 🖥️ #### Check disk usage: ```bash df -h Restart Apache: systemctl restart apache2 Find large files: find / -type f -size +500M Productivity 📈 (How I use it) Daily Review At the end of the day, I glance over my worklog, see what I accomplished, and note anything I need to carry over to tomorrow.\nWeekly Recap Every Friday, I skim through my logs to spot trends. If I’m getting stuck on the same issues, I figure out ways to improve my workflow.\nWhat\u0026rsquo;s next? 🔮 A few things I want to try next:\nAutomating worklog creation with VS Code snippets. adding useful bits from my worklog to onenote for better searchability. Expanding my command logs with more troubleshooting steps and automation scripts. Conclusion 🏁 The Journal extension in VS Code makes keeping a worklog effortless. It’s a game-changer for tracking progress, storing useful commands, and improving productivity. If you’re a sysadmin, developer, or project manager, I highly recommend giving it a shot. Let me know if you try it out! 🚀\n","permalink":"https://blog.rthur.me/posts/vscode-worklog-using-journal/","tags":["VSCODE"],"title":"Journal as a worklog"},{"categories":["Faith","Tech","Life"],"contents":"🛠️ Logging, Monitoring, and Maintaining the Soul A sysadmin\u0026rsquo;s guide to spiritual uptime (with kids, coffee, and grace)\nAs a sysadmin, you live by the logs. You monitor services, respond to alerts, patch vulnerabilities, and try to keep systems running with high availability. But have you ever thought about applying that same mindset to your soul?\nLately, I’ve been thinking—what if we treated our spiritual life the way we treat production environments?\nLet’s explore what it might look like to log, monitor, and maintain our inner life like we do our systems—especially when you\u0026rsquo;re doing it on limited sleep, while trying to parent two kids with a third on the way.\n📜 Logging: Capturing the Story In tech, logs tell the story of what’s happening: when services start, when they fail, what’s being accessed. Without logs, we’re flying blind.\nSpiritual logs work the same way. We need a record—a way to trace our journey, reflect, and grow.\nFor me, logging looks like:\nDaily journaling in Obsidian, even just a few lines (often on my phone with one hand while holding a baby bottle with the other). Noting what I prayed for, what Scripture stood out, what God might be saying. Writing down errors (aka sins, stumbles, moments I didn’t respond in love—like snapping at my toddler during a deployment gone wrong). Celebrating “successful deployments”—answered prayers, bedtime Bible questions from the kids, grace in the chaos. 📝 Try This:\nCreate a “spiritual syslog” in your favorite markdown app. One entry per day. Track what’s going on in your soul the way you’d track server events.\n🔍 Monitoring: Alerting When Something\u0026rsquo;s Off Monitoring tools like Prometheus or Zabbix help us know when something breaks before users do. We set thresholds, define alerts, and act fast.\nBut what are our spiritual alert systems?\nSometimes, our internal monitoring is quiet. We brush off fatigue, impatience, or bitterness until we’re deep in the red zone.\nSome helpful spiritual monitors:\nA trusted friend or spouse who checks in (my wife often notices when my “spiritual CPU” is maxing out before I do). Daily Scripture time—God’s Word is like a health dashboard. Sabbath as a recurring uptime check: “Am I running too hot?” Noticing warning signs: irritability, numbness, envy, burnout. ⚠️ Spiritual Alert Example:\n\u0026ldquo;Prayer timeout exceeded.\u0026rdquo; \u0026ldquo;Joy levels below threshold.\u0026rdquo; \u0026ldquo;Integrity error detected. Rolling back and repenting.\u0026rdquo; 🧪 Staging Environments: Testing in Grace Here’s where the analogy gets really fun.\nIn tech, staging environments are where we test changes before pushing to production. It’s a space to try, break, learn, and fix without real-world consequences.\nParenting is the most unpredictable production environment I’ve ever managed. I’ve realized I need a spiritual staging environment—safe places to work things out with God before the pressure hits.\nFor me, that looks like:\nEarly morning quiet (when I can get it) to pray through the day ahead. Running ideas past God—how I want to respond to stress, what kind of father and husband I want to be. Practicing Scripture and truth in my mind so they’re “deploy-ready” when stuff gets wild (which it will). 🧪 A Thought:\nDon’t wait for production firestorms to work out your faith. Stage often. Grace is the ultimate staging environment—safe, honest, and always available.\n🧹 Maintenance: Patch. Restart. Repent. Even stable systems need updates. You patch packages, reboot servers, clear caches. Without routine maintenance, things degrade.\nSame with the soul. Regular spiritual maintenance is how we stay healthy long-term—especially when life is loud and schedules aren’t your own.\nSome practices I rely on:\nWeekly reflection \u0026amp; repentance. A kind of apt upgrade for the soul. Scripture memorization—adds resilience and performance under pressure. Taking time to pray even when I don’t “feel” it (like applying security updates you know are good, even if they’re boring). Quick resets: deep breaths, small prayers in the hallway, turning off my phone for 10 minutes to talk to God before bed. 🛠️ Maintenance Mindset:\nDon’t wait for spiritual 500 errors. Build in your “cron jobs” of grace—even if they’re nap-time cron jobs.\n🧠 Observability: Awareness for the Long Haul In DevOps, we talk a lot about observability—being able to ask, “What’s going on?” and get answers fast. In the soul, that’s awareness, humility, listening to God.\nIf logging is journaling, and monitoring is Scripture \u0026amp; community, observability is this:\nAre you actually aware of what’s happening in your heart? Are you listening for patterns, not just individual events? Do you have tools (Scripture, prayer, wise counsel) to interpret what you’re seeing? With kids, your margin is slim—but observability might just be taking 2 minutes while washing dishes to ask, “God, where am I today?”\n☁️ Uptime Is Grace Let’s be real—your servers aren’t 100% uptime, and neither is your soul. Especially not with two kids and a third incoming launch. 😅\nBut the beauty of the gospel? God doesn’t measure us by spiritual SLA.\nJesus took our biggest outage—sin and separation—and brought us back online through the cross. Now, maintenance is a joy, not a fear.\nSo log with honesty. Monitor with hope. Stage with grace. Maintain with love.\nAnd when your system crashes?\nThere’s a loving Admin who never sleeps, always restores, and is more committed to your uptime than you are.\nYour Turn: What’s in your soul logs this week? Where are your alerts going off? What kind of staging space are you giving yourself and your family? Let me know—I’d love to hear how you’re monitoring the deeper layers of life, even in the busiest season.\n","permalink":"https://blog.rthur.me/posts/logging-monitoring-soul/","tags":["Sysadmin","Spiritual Life","Parenting","DevOps","Obsidian","Faith"],"title":"Logging, Monitoring, and Maintaining the Soul"},{"categories":["Drupal","Development","Elim"],"contents":"A custom-built Drupal website for Elim Church, designed to offer a clean, simple, and user-friendly experience. The site features easy navigation for sharing events, sermons, and church news. Built with Drupal, it provides an efficient content management system, allowing the church team to manage and update content with ease. The design is modern and responsive, ensuring the site is accessible on all devices.\nOrganisation: Elim Church Crawley Date: June 2014 - date Role: Project Lead ","permalink":"https://blog.rthur.me/projects/elim-website/","tags":["Elim","Church","Website"],"title":"Elim Website"}]