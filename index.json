[{"categories":["Work","VSCODE"],"contents":"Using the Journal Extension in VS Code to Keep a Worklog Keeping track of what you do every day might sound like extra work, but trust me, it can make a huge difference. Whether you\u0026rsquo;re a developer, freelancer, or sysadmin (like me!), having a worklog helps you stay organized, track progress, and troubleshoot issues faster. In this post, I\u0026rsquo;ll show you how I use the Journal extension in VS Code to keep my worklog simple and effective.\nWhat is a worklog? üíº A worklog is basically a running record of what you‚Äôve done throughout the day‚Äîtasks, problems, solutions, and anything else worth noting. It‚Äôs great for tracking progress, remembering fixes, and keeping yourself accountable. In system administration, software development, and project management, worklogs help with transparency and efficiency. I also use mine to store handy commands so I don‚Äôt have to Google the same stuff over and over again.\nWhat tools do I use? üßë‚Äçüç≥ü§å Here‚Äôs my setup:\nVS Code ‚Äì My daily driver for pretty much everything. Journal Extension ‚Äì A lightweight tool for keeping daily logs inside VS Code. Markdown ‚Äì Easy to format and read, plus it works well with GitHub. GitHub or Local Storage ‚Äì To keep my logs organized and accessible. Command Logs ‚Äì I save useful shell commands, scripts, and troubleshooting steps so I can reference them later. Setting it up üñ•Ô∏è Install the Journal extension: Open VS Code, hit (Ctrl + Shift + X), search for Journal, and install it. Create a worklog folder: Keeps everything tidy. Tweak the settings: Open Journal‚Äôs settings (Ctrl + , \u0026gt; Extensions \u0026gt; Journal) and adjust it to your liking‚Äîfile format (Markdown, JSON, or plain text) and save location. How I use it üìù ‚è±Ô∏è Logging Daily Tasks Every morning, I open my worklog and list out what I need to do. As I go through my day, I check off completed tasks, jot down any roadblocks, and note useful fixes.\nExample:\n## April 3, 2025 ### Tasks: - [x] Restart Apache service üîÑ - [x] Check disk space on servers üñ•Ô∏è - [ ] Review system backups and test restore üóÇÔ∏è ### Notes: - Had to troubleshoot Apache restart due to port conflict. - Found one server running low on disk space and cleared logs. üìú Tracking Issues and Fixes Whenever I run into a problem, I document it, along with how I fixed it. This way, if the issue pops up again, I don‚Äôt have to start from scratch.\nExample:\n### Issue: Slow Database Queries ‚ö†Ô∏è - Optimized SQL queries by adding proper indexing. - Reduced query execution time from **4s** to **800ms**. üñ•Ô∏è Storing Useful Commands As a sysadmin, I‚Äôm constantly using different shell commands. Instead of digging through old notes or Googling the same things repeatedly, I save them in my worklog.\nExample:\n### Server Maintenance Commands üñ•Ô∏è #### Check disk usage: ```bash df -h Restart Apache: systemctl restart apache2 Find large files: find / -type f -size +500M ## Productivity üìà (How I use it) ### Daily Review At the end of the day, I glance over my worklog, see what I accomplished, and note anything I need to carry over to tomorrow. ### Weekly Recap Every Friday, I skim through my logs to spot trends. If I‚Äôm getting stuck on the same issues, I figure out ways to improve my workflow. ## What\u0026#39;s next? üîÆ A few things I want to try next: - Automating worklog creation with VS Code snippets. - adding useful bits from my worklog to **onenote** for better searchability. - Expanding my command logs with more troubleshooting steps and automation scripts. ## Conclusion üèÅ The **Journal** extension in **VS Code** makes keeping a worklog effortless. It‚Äôs a game-changer for tracking progress, storing useful commands, and improving productivity. If you‚Äôre a **sysadmin, developer, or project manager**, I highly recommend giving it a shot. Let me know if you try it out! üöÄ ","permalink":"https://blog.rthur.me/posts/vscode-worklog-using-journal/","tags":["VSCODE"],"title":"Journal as a worklog"},{"categories":["Linux","Broadcasting","Open Source","Content Creation"],"contents":"Join 3 experienced Open Source professionals (Alan Pope, Mark Johnson, Martin Wimpress) as they discuss the impact Linux has in their daily lives. Upbeat family-friendly banter, conversation and discussion for Linux enthusiasts and casual observers of all ages. A new episode every two weeks covering terminal productivity, desktop experience, development, gaming, hosting, hardware, community, cloud-native and all the Linux Matters that matter.\nOrganisation: Linux Matters Date: April 2023 - date Role: Writer \u0026amp; Presenter ","permalink":"https://blog.rthur.me/projects/linux-matters/","tags":["Podcast","Community"],"title":"Linux Matters"},{"categories":["Linux","Development","Open Source","Retro","Entertainment"],"contents":"Retro Home is custom Raspberry Pi operating system purpose built for retro gaming. Built with Ubuntu and using the minimalist emulator frontend Ludo it supports most classic consoles from Atari, Nintendo, Sega and SNK along with arcade emulation support. A number of retro styled Raspberry Pi cases from Retroflag and Waveshare are supported (with more in the works) using bespoke GPIO drivers.\nOrganisation: Retro Home Date: July 2020 - date Role: Project Lead ","permalink":"https://blog.rthur.me/projects/retro-home/","tags":["Raspberry Pi","GPIO","Gaming","Ludo","Ubuntu","Bash","Python","GNOME","libretro","debootstrap","Emulation"],"title":"Retro Home"},{"categories":["Linux","Development","Open Source"],"contents":"Quickly create and run highly optimised desktop virtual machines for Linux, macOS and Windows; with just two commands. You decide what operating system you want to run and Quickemu will figure out the best way to do it for you\nOrganisation: Quickemu Project Date: March 2020 - date Role: Project Lead ","permalink":"https://blog.rthur.me/projects/quickemu/","tags":["Bash","QEMU","Windows","macOS","Virtualisation","SPICE","VirtIO","VirGL","Hyper-V","KVM"],"title":"Quickemu"},{"categories":["Linux","Broadcasting","Open Source"],"contents":"Ubuntu Podcast was a weekly podcast that discussd news from the Ubuntu and Open Source community. The podcast ran from 2008 to 2021 and I joined the line up of presenters in 2015. In addition to the weekly podcasts we also participated in live shows at OggCamp and FOSS Talk Live.\nOrganisation: Ubuntu Podcast Date: February 2015 - September 2021 Role: Co-presenter \u0026amp; Producer ","permalink":"https://blog.rthur.me/projects/ubuntu-podcast/","tags":["Ubuntu","Podcast","Live Show","Live Streaming","Audio Production","OggCamp","FOSS Talk Live"],"title":"Ubuntu Podcast"},{"categories":["Drupal","Development","Elim"],"contents":"A custom-built Drupal website for Elim Church, designed to offer a clean, simple, and user-friendly experience. The site features easy navigation for sharing events, sermons, and church news. Built with Drupal, it provides an efficient content management system, allowing the church team to manage and update content with ease. The design is modern and responsive, ensuring the site is accessible on all devices.\nOrganisation: Elim Church Crawley Date: June 2014 - date Role: Project Lead ","permalink":"https://blog.rthur.me/projects/elim-website/","tags":["Elim","Church","Website"],"title":"Elim Website"},{"categories":["Linux","Development","Open Source"],"contents":"The MATE Desktop Environment is the continuation of GNOME 2. MATE Desktop provides an intuitive and attractive desktop environment using traditional metaphors for Linux and other Unix-like operating systems.\nOrganisation: MATE Desktop Date: June 2012 - date Role: Developer \u0026amp; Community Manager ","permalink":"https://blog.rthur.me/projects/mate-desktop/","tags":["MATE Desktop","C","GTK","Python","make","Community"],"title":"MATE Desktop"},{"categories":["Linux","Development","Open Source"],"contents":"Ubuntu comes with everything you need to run your organisation, school, home or enterprise. All the essential applications, like an office suite, browsers, email and media apps come pre-installed.\nCommunity contributor since 2006, worked for Canonical from 2016 to 2021 progressing from software engineer to director of engineering. I remain active in the Ubuntu community.\nOrganisation: Ubuntu Project \u0026amp; Canonical Date: January 2006 - date Role: Community contributor ","permalink":"https://blog.rthur.me/projects/ubuntu/","tags":["Ubuntu","Debian","GNOME","C","GTK","Python","Snapcraft","systemd","Raspberry Pi","Community","Robotics","IoT"],"title":"Ubuntu"}]